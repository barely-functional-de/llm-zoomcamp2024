[
    {
        "question": "I just discovered the course. Can I still join?",
        "text": "Yes, but if you want to receive a certificate, you need to submit your project while we’re still accepting submissions.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "I have registered for the [insert-zoomcamp-name]. When can I expect to receive the confirmation email?",
        "text": "You don't need it. You're accepted. You can also just start learning and submitting homework (while the form is Open) without registering. It is not checked against any registered list. Registration is just to gauge interest before the start date.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "What is the video/zoom link to the stream for the “Office Hours” or live/workshop sessions?",
        "text": "The zoom link is only published to instructors/presenters/TAs. Students participate via Youtube Live and submit questions to Slido (link would be pinned in the chat when Alexey goes Live). The video URL should be posted in the announcements channel on Telegram & Slack before it begins. Also, you will see it live on the DataTalksClub YouTube Channel. Don’t post your questions in chat as it would be off-screen before the instructors/moderators have a chance to answer it if the room is very active.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "SaturnCloud - How do I get access?",
        "text": "Issue: I get the notice that due to traffic, I’m on a waitlist for new signups. Answer: There was a form to submit our emails to, so Alexey can send it in bulk. If you missed that deadline, just sign up manually (or via request tech demo link) and use the chat to request for free hours for 'llm zoomcamp'. Issue: I’m a pre-existing user from a different zoomcamp and I’m not awarded the free hours even though I’ve submitted my email in the form. Answer: Just request it via their chat, after you’ve logged in using your pre-existing account, citing 'llm zoomcamp'.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "SaturnCloud - How many free hours do we get?",
        "text": "We get 15 free hours per month, which might be limited to the free tier’s hardware configuration.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "SaturnCloud - Something went wrong. Max of 15 hours of resource usage per month",
        "text": "This message means you have used all allocated hours. Make sure to set Shutout After in settings. Also, do not leave your notebooks running. If your hours are out, try using Google Colab and Kaggle.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "Cloud alternatives with GPU",
        "text": "Check the quota and reset cycle carefully - is the free hours per month or per week? Usually if you change the configuration, the free hours quota might also be adjusted, or it might be billed separately. Google Colab, Kaggle, Databricks (?), so many others. Use GPTs to find out. Some might have restrictions on what you can and cannot install, so be sure to read what is included in a free vs paid tier.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "Leaderboard - I am not on the leaderboard / how do I know which one I am on the leaderboard?",
        "text": "When you set up your account you are automatically assigned a random name such as 'Lucid Elbakyan' for example. Click on the Jump to your record on the leaderboard link to find your entry. If you want to see what your Display name is, click on the Edit Course Profile button. First field is your nickname/displayed-name, change it if you want to be known as your Slack username or Github username or whatever nickname of your choice, if you want to remain anonymous. Unless you want 'Lucid Elbakyan' on your certificate, it is mandatory that you change the second field to your official name as in your identification documents - passport, national ID card, driver’s license, etc. This is the name that is going to appear on your Certificate!",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "Certificate - Can I follow the course in a self-paced mode and get a certificate?",
        "text": "No, you can only get a certificate if you finish the course with a 'live' cohort. We don't award certificates for the self-paced mode. The reason is you need to peer-review 3 capstone(s) after submitting your own project. You can only peer-review projects at the time the course is running; after the form is closed and the peer-review list is compiled.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "I missed the first homework - can I still get a certificate?",
        "text": "Yes, you need to pass the Capstone project to get the certificate. Homework is not mandatory, though it is recommended for reinforcing concepts, and the points awarded count towards your rank on the leaderboard.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "I was working on next week’s homework/content - why does it keep changing?",
        "text": "This course is being offered for the first time, and things will keep changing until a given module is ready, at which point it shall be announced. Working on the material/homework in advance will be at your own risk, as the final version could be different.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "When will the course be offered next?",
        "text": "Summer 2025 (via Alexey).",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "WSL2 - ResponseError: model requires more system memory (X.X GiB) than is available (Y.Y GiB). My system has more than X.X GiB.",
        "text": "Your WSL2 is set to use Y.Y GiB, not all your computer memory. Create .wslconfig file under your Windows user profile directory (C:\\Users\\YourUsername\\.wslconfig) with the desired RAM allocation: [wsl2] memory=8GB. Restart WSL: wsl --shutdown. Run the free command to verify the changes. For more details, read this article.",
        "course": "llm-zoomcamp",
        "section": "General course-related questions"
    },
    {
        "question": "OpenAI: Error when running OpenAI chat.completions.create command",
        "text": "You may receive the following error when running the OpenAI chat.completions.create command due to insufficient credits in your OpenAI account: NotFoundError: Error code: 404 - {'error': {'message': 'The model `gpt-4o` does not exist or you do not have access to it.', 'type': 'invalid_request_error', 'param': None, 'code': 'model_not_found'}}",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "OpenAI: Error: RateLimitError: Error code: 429",
        "text": "RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'} The above errors are related to your OpenAI API account’s quota. There is no free usage of OpenAI’s API so you will be required to add funds using a credit card (see pay as you go in the OpenAI settings at platform.openai.com). Once added, re-run your python command and you should receive a successful return code. Steps to resolve: Add credits to your account here (min $5) In chat.completions.create(model='gpt-4o', …) specify one of the available for you models: You might need to recreate an API key after adding credits to your account and update it locally.",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "OpenAI: Error: 'Cannot import name OpenAI from openai'; How to fix?",
        "text": "Update openai version from 0.27.0 -> any 1.x version",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "OpenAI: How much will I have to spend to use the Open AI API?",
        "text": "Using the Openai API does not cost much, you can recharge from 5 dollars. At least for what I spent on the first unit it was barely 5 cents.",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "OpenAI: Do I have to subscribe and pay for Open AI API for this course?",
        "text": "No, you don't have to pay for this service in order to complete the course homeworks, you could use some of the alternatives free from this list posted into the course Github. llm-zoomcamp/01-intro/open-ai-alternatives.md at main · DataTalksClub/llm-zoomcamp (github.com)",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "ElasticSearch: ERROR: Elasticsearch exited unexpectedly",
        "text": "If you get this error, it’s likely that elasticsearch doesn’t get enough RAM I specified the RAM size to the configuration (-m 4GB) docker run -it --rm --name elasticsearch -m 4GB -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" -e \"xpack.security.enabled=false\" docker.elastic.co/elasticsearch/elasticsearch:8.4.3 Or give it _less_ RAM: Tip for Github Codespace users If you want to run elasticsearch server in a docker, then it may fail with the command in the documentation. In that case, you can try inserting this line -e \"ES_JAVA_OPTS=-Xms512m -Xmx512m\". This reduces the resource usage. Full command: docker run -it --rm --name elasticsearch -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" -e \"xpack.security.enabled=false\" -e \"ES_JAVA_OPTS=-Xms512m -Xmx512m\" docker.elastic.co/elasticsearch/elasticsearch:8.4.3 If it doesn't work, try this: sudo sysctl -w vm.max_map_count=262144 And give the Java machine inside the container more RAM: docker run -it --rm --name elasticsearch -p 9200:9200 -p 9300:9300 --ulimit nofile=65536:65536 --ulimit memlock=-1:-1 --memory=4g --cpus=2 -e \"discovery.type=single-node\" -e \"xpack.security.enabled=false\" -e \"ES_JAVA_OPTS=-Xms2g -Xmx2g\" docker.elastic.co/elasticsearch/elasticsearch:8.4.3 Another possible solution may be to set the memory_lock to false: docker run -it --rm --name elasticsearch -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" -e \"xpack.security.enabled=false\" -e \"ES_JAVA_OPTS=-Xms512m -Xmx512m\" -e \"bootstrap.memory_lock=false\" docker.elastic.co/elasticsearch/elasticsearch:8.4.3",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "ElasticSearch: ERROR: Elasticsearch.index() got an unexpected keyword argument 'document'",
        "text": "Instead of document as used in the course video, use doc",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "Docker: How do I store data persistently in Elasticsearch?",
        "text": "When you stop the container, the data you previously added to elastic will be gone. To avoid it, we can add volume mapping: docker volume create elasticsearch_data docker run -it --rm --name elasticsearch -p 9200:9200 -p 9300:9300 -v elasticsearch_data:/usr/share/elasticsearch/data -e \"discovery.type=single-node\" -e \"xpack.security.enabled=false\" docker.elastic.co/elasticsearch/elasticsearch:8.4.3",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "Authentication: Safe and easy way to store and load API keys",
        "text": "You can store your different API keys in a yaml file that you will add in your .gitignore file. Be careful to never push or share this file. For example, you can create a new file named “api_keys.yml” in your repository. Then, do not forget to add it in your .gitignore file: #api_keys api_keys.yml You can now fill your api_keys.yml file: OPENAI_API_KEY: “sk[...]” GROQ_API_KEY: “gqk_[...]” Save your file. You will need the pyyaml library to load your yaml file, so run this command in your terminal: pip install pyyaml Now, open your jupyter notebook. You can load your yaml file and the associated keys with this code: import yaml # Open the file with open('api_keys.yml', 'r') as file: # Load the data from the file data = yaml.safe_load(file) # Get the API key (Groq example here) groq_api_key = data['GROQ_API_KEY'] Now, you can easily replace the “api_key” value directly with the loaded values without loading your environment variables.",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "Authentication: Why is my OPENAI_API_KEY not found in the jupyter notebook?",
        "text": "Option 1: using direnv created the .envrc file & added my API key, ran direnv allow in the terminal was getting an error: \"OpenAIError: The api_key client option must be set either by passing api_key to the client or by setting the OPENAI_API_KEY environment variable\" resolution: install dotenv & add the following to a cell in the notebook. You can install dotenv by running: pip install python-dotenv. from dotenv import load_dotenv load_dotenv('.envrc') Option 2: using Codespaces Secrets Log in to your GitHub account and navigate to Settings > Codespaces There is a section called secrets where you can create Secrets like OPENAI_API_KEY and select for which repositories the secret is supposed to be available. Once you set this up, the key will be available in your codespaces session",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "OpenSource: How can I use Ollama open-source models locally on my pc without using any API?",
        "text": "Prior to using Ollama models in llm-zoomcamp tasks, you need to have ollama installed on your pc and the relevant LLM model downloaded with ollama from https://www.ollama.com To download ollama for Ubuntu: ``` curl -fsSL https://"
    },
    {
        "question": "OpenSource: I am using Groq, and it doesn't provide a tokenizer library based on my research. How can we estimate the number of OpenAI tokens asked in homework question 6?",
        "text": "The question asks for the number of tokens in gpt-4o model. tiktoken is a python library that can be used to get the number of tokens. You don't need openai api key to get the number of tokens. You can use the code provided in the question to get the number of tokens.",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "OpenSource: Can I use Groq instead of OpenAI?",
        "text": "You can use any LLM platform for your experiments and your project. Also, the homework is designed in such a way that you don’t need to have access to any paid services and can do it locally. However, you would need to adjust the code for that platform. See their documentation pages.",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "OpenSource: Can I use open-source alternatives to OpenAI API?",
        "text": "Yes. See module 2 and the open-ai-alternatives.md in module 1 folder.",
        "course": "llm-zoomcamp",
        "section": "Module 1: Introduction"
    },
    {
        "question": "SaturnCloud: How do you manage the changes from SaturnCloud to your Github repository?",
        "text": "Of course you should have first added your Github repository in SaturnCloud and the SSH Key in your Github account settings.\n\nOnce you are in jupyter notebook from SaturnCloud, open the terminal and write these lines:\n1- Navigate to Your Project Directory: \ncd /home/jovyan/my_project\n2- Configure GitHub Remote to Use SSH: \ngit remote set-url origin git@github.com:username/repository.git\n3- Stage, Commit and push your changes:\ngit add .\ngit commit -m \"Your commit message\"\ngit push",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "SaturnCloud: How can I clean out the hugging face model cache on a saturn cloud notebook?",
        "text": "Clean out your cache using the following code:\nfrom transformers import TRANSFORMERS_CACHE\nprint(TRANSFORMERS_CACHE)\nimport shutil\nshutil.rmtree(TRANSFORMERS_CACHE)\nNote: Make sure to shutdown the notebook and restart the kernel",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "ElasticSearch: Can I backup and restore my elasticsearch index from one to another docker container?",
        "text": "Yes, you can. Here the step to follow:\n\n- Open a bash session in the elasticsearch container\n```bash\ndocker exec -it elasticsearch bash\n```\n- Add path.repo configuration:\n```bash\necho path.repo: [\"/usr/share/elasticsearch/backup\"] >> /usr/share/elasticsearch/config/elasticsearch.yml\n```\n- Restart container and verify it was created correctly:\n```bash\ndocker restart elasticsearch\ncurl -X GET \"localhost:9200/_snapshot/my_backup?pretty\"\n```\n- Create the snapshot (this is the backup ;))\n```bash\ncurl -X PUT \"localhost:9200/_snapshot/my_backup/snapshot_1?wait_for_completion=true\" -H 'Content-Type: application/json' -d'\n{\n  \"indices\": \"your_index_name\",\n  \"ignore_unavailable\": true,\n  \"include_global_state\": false\n}\n'\n```\n- Copy the backup to my machine:\n```bash\ndocker cp elasticsearch:/usr/share/elasticsearch/backup /path/to/local\n```\n- Now create the new container or use docker-compose just in case you are following the module 2:\n```bash\ndocker compose up -d\n```\n- Add the path.repo configuration in the new one, same as before:\n```bash\ndocker exec -it new_elasticsearch bash\necho path.repo: [\"/usr/share/elasticsearch/backup\"] >> /usr/share/elasticsearch/config/elasticsearch.yml\n```\n- Restart the docker container and copy the snapshot in it:\n```bash\ndocker restart new_elasticsearch\ndocker cp /path/to/local/backup new_elasticsearch:/usr/share/elasticsearch\n```\n- Register the Snapshot Repository in the New Container:\n```bash\ncurl -X PUT \"localhost:9200/_snapshot/my_backup\" -H 'Content-Type: application/json' -d'\n{\n  \"type\": \"fs\",\n  \"settings\": {\n\t\"location\": \"/usr/share/elasticsearch/backup\"\n  }\n}\n'\n```\n- Verify if it exists:\n```bash\ncurl -X GET \"localhost:9200/_snapshot/my_backup/snapshot_1?pretty\"\n```\n- Restore the snapshot:\n```bash\ncurl -X POST \"localhost:9200/_snapshot/my_backup/snapshot_1/_restore\" -H 'Content-Type: application/json' -d'\n{\n  \"indices\": \"your_index_name\",\n  \"ignore_unavailable\": true,\n  \"include_global_state\": false\n}\n'\n```\n- Show your indexes:\n```bash\ncurl -X GET \"localhost:9200/_cat/indices?v\"\n```\n- Extra point: If you want to change the original index name by other when you restore the snapshot:\n```bash\ncurl -X POST \"localhost:9200/_snapshot/my_backup/snapshot_1/_restore?pretty\" -H 'Content-Type: application/json' -d'\n{\n  \"indices\": \"old_index\",\n  \"ignore_unavailable\": true,\n  \"include_global_state\": false,\n  \"rename_pattern\": \"old_index\",\n  \"rename_replacement\": \"new_index\"\n}\n'\n```",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "ElasticSearch: How can I limit the memory used by the ElasticSearch container?",
        "text": "You can limit the amount of memory used in the ElasticSearch container by adding the next line to the environment section of your docker-compose. Choose the amount of your preference, e.g.:\n- \"ES_JAVA_OPTS=-Xms1g -Xmx1g\"  # Set Java heap size to 1GB\n\n- You can limit CPU usage for an Elasticsearch service within a docker-compose.yaml file, you can utilize the resource configuration options available in Docker Compose. This includes cpus to limit the number of CPUs that the container can utilize. You can configure your Elasticsearch section in the docker-compose.yaml to restrict CPU usage:\n\nservices:\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3\n    container_name: elasticsearch\n    environment:\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n    ports:\n      - \"9200:9200\"\n      - \"9300:9300\"\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'  # Limits to 1 CPU\n        reservations:\n          cpus: '0.5'  # Reserves 0.5 CPUs",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Docker: How to inspect the content of a file inside a Docker container?",
        "text": "You have several ways to inspect the content of a file when you are inside a Docker container. \nFirst, make sure you ran the docker container interactively using bash:\ndocker exec -it <container> bash\nThen, you are able to use bash commands. For this case, I propose two solutions:\nUse “cat” and the file you want to see the content: cat your_file . This will directly print the content in your terminal.\nInstall vim or nano using apt get and open the file using vim or nano (this can be more suitable for larger files):\napt-get install vim\nvim your_file\nThen, you can exit your file in vim by pressing ESC then typing “:q” and finally press ENTER",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Docker: Error: Docker mounted volume adds ;C to end of windows path",
        "text": "Use the following line instead in mounting the current volume to docker for Q4:\n`-v \"/${PWD}/ollama_files:/root/.ollama\"`",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Docker: Why does inferring using Phi 3 locally take so long on Macbook Air M1?",
        "text": "In Docker Desktop, try to increase the resource.\nGo to the Dashboard > Settings > Resources. Raise the memory limit to 15GB and swap to 4GB - be generous. Applied and restarted the changes",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Docker: How can to clean docker cache?",
        "text": "docker system prune -a",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Ollama: “Error: pull model manifest: 503: no healthy upstream” when pulling a model with Ollama",
        "text": "A network connection failure usually causes this error and if you try to repeat the operation immediately it’ll still fail. It’s a temporary error, you should wait for 2 or 3 minutes before attempting to pull the model again. Then some minutes later, the operation will success.",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Ollama: Error: NotFoundError: Error code: 404 - {'error': {'message': \"model XXX not found, try pulling it first\" …",
        "text": "To solve this you need to pull one of these models first: https://ollama.com/library . Also check the proper name of the module.",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Ollama: Running Ollama locally on Colab gives error after the llm() line",
        "text": "APIConnectionError: Connection error.\nIt seems to be running at localhost:11434 however localhost:11434/v1/ gives 404\nFound a solution in the Medium article and this link: \nhttps://medium.com/@mauryaanoop3/running-ollama-on-google-colab-free-tier-a-step-by-step-guide-9ef74b1f8f7a\nhttps://github.com/ollama/ollama/issues/703",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Ollama: How can remove Ollama model?",
        "text": "ollama list\nollama rm [model_name]",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Ollama: Error code 500 InternalServerError",
        "text": "InternalServerError: Error code: 500 - {'error': {'message': 'model requires more system memory (5.6 GiB) than is available (1.5 GiB)', 'type': 'api_error', 'param': None, 'code': None}}.\n\nRunning elastic search with the docker-compose is the cause of the RAM memory issue. To fix this you need to change the docker-compose.yaml file to limit the RAM usage of elastic search\n\nversion: '3.8'\n\nservices:\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3\n    container_name: elasticsearch\n    environment:\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n      - ES_JAVA_OPTS=-Xms1g -Xmx1g  # change 1\n    ports:\n      - \"9200:9200\"\n      - \"9300:9300\"\n    deploy:\n      resources:\n        limits:\n          memory: 2G  # change 2\n\n  ollama:\n    image: ollama/ollama\n    container_name: ollama\n    volumes:\n      - ollama:/root/.ollama\n    ports:\n      - \"11434:11434\"\n\nvolumes:\n  ollama:",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Mistral AI: Unable to get Mistral-7B-v0.1 access despite accepting terms on HF",
        "text": "Manually set the token as below:\naccess_token = <your_token>\nmodel  = AutoModelForCausalLM.from_pretrained(\"mistralai/Mistral-7B-v0.1\", token=access_token)\ntokenizer = AutoTokenizer.from_pretrained(\"mistralai/Mistral-7B-v0.1\", token=access_token)",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Python: Error: ModuleNotFoundError: No module named 'transformers.cache_utils'",
        "text": "To solve just install transformers directly from github\n!pip install git+https://github.com/huggingface/transformers",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Python: Exception: data did not match any variant of untagged enum PyPreTokenizerTypeWrapper at line 40 column 3",
        "text": "To solve just install transformers directly from github\n!pip install git+https://github.com/huggingface/transformers",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "Python: from google.protobuf.pyext import _message / TypeError: bases must be types",
        "text": "pip install protobuf==3.20.1",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "HuggingFace: How to get the number of tokens in a certain string related to a certain model on hugging face?",
        "text": "1. search with the model name on hugging face.\n2. get the transformer used on the model.\n3. using the transformer, encode the string you want.\n4. calculate the length of the outputted tensor.\n\nThe previous code snippet uses the tokenizer of google/gemma-2b LLM.\nDon’t forget to make your token secret.",
        "course": "llm-zoomcamp",
        "section": "Module 2: Open-Source LLMs"
    },
    {
        "question": "ElasticSearch: Error: Elasticsearch.index() got an unexpected keyword argument 'document'",
        "text": "Upgrade elasticsearch 7.13.3 to 8.14.0 or any 7.x installation to 8.x. The earlier modules used a docker image of elasticsearch 8.4.3 so the python installation of elasticsearch must also be at least 8.x.\nOr use the keyword ‘body’ instead of ‘document’\nFor conda users, if you’re trying to update to elasticsearch 8.x using conda install elasticsearch==8.4.3  but getting a “PackagesNotFoundError\", try this:\n\n$ conda config --add channels conda-forge \n$ conda config --set channel_priority strict \n$ conda install -c conda-forge elasticsearch==8.4.3",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "ElasticSearch: TypeError: Elasticsearch.search() got an unexpected keyword argument 'knn'",
        "text": "This worked for me:",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "ElasticSearch: ConnectionError: Connection error caused by: ConnectionError(Connection error caused by: NewConnectionError(<urllib3.connection.HTTPConnection object at 0x7c455bb94ac0>: Failed to establish a new connection: [Errno 111] Connection refused)) in elastic search",
        "text": "Try to running docker container based on first course module like this : \ndocker run -it \\\n\t--rm \\\n\t--name elasticsearch \\\n\t-p 9200:9200 \\\n\t-p 9300:9300 \\\n\t-e \"discovery.type=single-node\" \\\n\t-e \"xpack.security.enabled=false\" \\\n\tdocker.elastic.co/elasticsearch/elasticsearch:8.4.3\nAnd don’t forget to forwarding your port 9200 if you’re using github codespace or run locally in vscode",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "Why do I get scores greater than 1 on my hits after querying my ElasticSearch database?",
        "text": "As seen in this video: https://www.youtube.com/watch?v=ptByfB_YcEg&t=102s, we can get scores on obtained hits that are greater than 1 despite having a “cosine” similarity measure in our index settings. We would thus expect scores between -1 and 1. However, in the case of the final query, we have several scores additionned together to provide the final score:\nThe KNN related score, which is between -1 and 1 (cosine similarity)\nThe text relevance score:  BM25 algorithm scores which can be any positive number, including above 1. This is a “ranking function which calculates score to represent a document's relevance with respect to query” (source: https://stackoverflow.com/questions/43794749/what-is-bm25-and-why-elasticsearch-chose-this-algorithm-for-scoring-in-version-5).\nSince we have a “match” filter in our query, this triggers the usage of the BM25 ranking algorithm and the final score contains this information.\nTo get more details about the final scores, you can modify the search query and add an “explain” parameter:\nresponse = es_client.search(\n    index=index_name,\n    query={\n        \"match\": {\"section\": \"General course-related questions\"},\n    },\n    knn=knn_query,\n    size=5,\n    explain=True\n)",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "Not module named 'sentence_transformers'",
        "text": "For this module homework make sure you install the package sentence-transformers it can be installed as simply as:\n\npip install sentence-transformers",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "Can not create the index: Connection timeout.",
        "text": "I was getting this error at this step: es_client.indices.create(index=index_name, body=index_settings)\nI checked the log of the elasticsearch server and running this command, the status was red: curl -X GET \"http://localhost:9200/_cluster/health?pretty\"\nMy problem was that I did not have enough disk space in my computer for docker images. I ended up removing unused ones, manually and pruning:\n\ndocker image prune\ndocker volume prune\ndocker container prune",
        "course": "llm-zoomcamp",
        "section": "Module 3: X",
        "added_by": "Ibai Irastorza"
    },
    {
        "question": "TypeError: unsupported operand type(s) for *: 'float' and 'dict' when running the vector search function within the evaluate function",
        "text": "Make sure your search function receives a query vector, not a dictionary. To resolve this, ensure that the q passed to the search_function within evaluate is correctly transformed into an embedding vector. The following code can help:\n\nv_query = embedding_model.encode(query_text)\nresults = search_function(v_query)",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "Find maximum of a numpy array (of any dimension):",
        "text": "max_value = numpy_array.max()",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "What is the cosine similarity?",
        "text": "Cosine similarity is a measure used to calculate the similarity between two non-zero vectors, often used in text analysis to determine how similar two documents are based on their content. This metric computes the cosine of the angle between two vectors, which are typically word counts or TF-IDF values of the documents. The cosine similarity value ranges from -1 to 1, where 1 indicates that the vectors are identical, 0 indicates that the vectors are orthogonal (no similarity), and -1 represents completely opposite vectors.",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "What are documents in ElasticSearch?",
        "text": "A “document” is a collection of fields, which are the key-value pairs that contain your data, that have been serialized as a JSON object.",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "running docker docker: Error response from daemon: Conflict. The container name '/elasticsearch' is already in use by container '20467e6723d78ff2e4e9e0c9a8b9580c07f070e4c852d12c585b1d71aefd6665'. You have to remove (or rename) that container to be able to reuse that name. See 'docker run --help'.",
        "text": "docker stop elasticsearch\ndocker rm elasticsearch",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "How to scale Elastic search scores from [0, 1] to [-1, 1] to compare its results with your own ones, example calculating ranks using dot_product metric?",
        "text": "score = (es_score - 0.5) * 2",
        "course": "llm-zoomcamp",
        "section": "Module 3: X"
    },
    {
        "question": "How can I suppress the warning 'model \"multi-qa-mpnet-base-dot-v1\" was made on sentence transformers v3.0.0 bet'?",
        "text": "Upgrade `sentence-transformers` to v3.0.0>=, e.g., pip install sentence-transformers>=3.0.0 to avoid the warnings.",
        "course": "llm-zoomcamp",
        "section": "Module 4: Monitoring"
    },
    {
        "question": "What to do if I encounter OSError: [WinError 126] Error loading fbgemm.dll on Windows OS?",
        "text": "Solution 1: Install Visual C++ Redistributable.\nSolution 2: Install Visual Studio, not Visual Studio Code, and restart your system. For more details, follow this link: https://discuss.pytorch.org/t/failed-to-import-pytorch-fbgemm-dll-or-one-of-its-dependencies-is-missing/201969",
        "course": "llm-zoomcamp",
        "section": "Module 4: Monitoring"
    },
    {
        "question": "How to fix OperationalError: could not translate host name 'postgres' to address: No such host is known?",
        "text": "Inside the .env file, change POSTGRES_HOST=localhost.",
        "course": "llm-zoomcamp",
        "section": "Module 4: Monitoring"
    },
    {
        "question": "How can I set Pandas to show the entire text content in a column?",
        "text": "By default, Pandas truncates text content in a column to 50 characters. To view the entire content, use: pd.set_option('display.max_colwidth', None). This will allow you to see the full text content without truncation.",
        "course": "llm-zoomcamp",
        "section": "Module 4: Monitoring"
    },
    {
        "question": "How to normalize vectors in a Pandas DataFrame column?",
        "text": "You can normalize vectors using numpy by defining a lambda function. For example:\nimport numpy as np\nnormalize_vec = lambda v: v / np.linalg.norm(v)\ndf['new_col'] = df['org_col'].apply(normalize_vec)",
        "course": "llm-zoomcamp",
        "section": "Module 4: Monitoring"
    },
    {
        "question": "How to compute the quantile or percentile of a Pandas DataFrame column?",
        "text": "To compute the 75% percentile or 0.75 quantile, use:\nquantile = df['col'].quantile(q=0.75)",
        "course": "llm-zoomcamp",
        "section": "Module 4: Monitoring"
    }







]
